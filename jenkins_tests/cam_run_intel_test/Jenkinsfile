pipeline {
  agent any
  stages {
    stage('Check out externals') {
      steps {
        sh 'python manage_externals/checkout_externals -e Externals.cfg'
      }
    }
    stage('Copy Config Files') {
      steps {
        sh '''cp -rf cime_config_cesm_machines_files/config_machines.xml cime/config/cesm/machines/config_machines.xml
              cp -rf cime_config_cesm_machines_files/config_compilers.xml cime/config/cesm/machines/config_compilers.xml'''
      }
    }
    stage('Remove Old Output') {
      steps {
        sh 'rm -rf /home/jenkins/cam_output/scratch/test_scam_atex /home/jenkins/cam_output/scratch/test_scam_arm97'
        script {
          if ("${env.JOB_NAME}" == "branch_cam_test")
            sh "rm -rf ${env.WORKSPACE}/cime/scripts/test_scam_atex ${env.WORKSPACE}/cime/scripts/test_scam_arm97"
        }
      }
    }
    stage('Run atex') {
      steps {
        sh '''source /opt/intel/oneapi/setvars.sh --force
              run_scripts/run_scam.bash atex'''
      }
    }
    stage('Run arm97 with SILHS') {
      steps {
        sh '''source /opt/intel/oneapi/setvars.sh --force
              run_scripts/run_scam.bash -s arm97'''
      }
    }
  }
  post {
    always {
      script {
        if ( "${env.JOB_NAME}" == "cam_run_intel_test" )
      	  cleanWs(cleanWhenSuccess: true, cleanWhenFailure: true)
        sh 'chmod -R 755 /home/jenkins/cam_output/'
      }
    }
    failure {
      script {
        if ( "${env.JOB_NAME}" ==	"cam_run_intel_test" )
      	  emailext(to: 'messnermet@uwm.edu', subject: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has Failed", attachLog: true, body: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has failed. See the attached build log and the build results (${env.BUILD_URL}) for help troubleshooting.")
      }
    }
  }
}
