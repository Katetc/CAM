pipeline {
  agent any
  stages {
    stage('Clone SysAdmin to tmp') {
      steps {
        sh '''rm -rf /home/jenkins/cam_r8029_flags_bit_diff_test_workspace/sys_admin
              git clone https://github.com/larson-group/sys_admin.git /home/jenkins/cam_r8029_flags_bit_diff_test_workspace/sys_admin'''
      }
    }
    stage('Run Python Test') {
      steps {
       	// The source step is done to bring in all the needed intel path variables to run the rest of the commands 
        sh '''source /opt/intel/oneapi/setvars.sh --force
              rm -rf /home/jenkins/cam_output/scratch/UWM_debug_r8029_flags_f10_f10_mg37
              python3 /home/jenkins/cam_r8029_flags_bit_diff_test_workspace/sys_admin/python_nightly_test_suite/run_test.py -c /home/jenkins/cam_r8029_flags_bit_diff_test_workspace/bit_diff_cam_r8029_config'''
      }
    }
  }
  post {
    always {
      // Certain logical functions like IF statements can only operate while in a script{} block
      script {
         // This checks if the current test matches the name of the official test
         // We do this to prevent the branch tests and the clubb copy tests from removing its output
         // so they can be referenced later for debugging
         if ( "${env.JOB_NAME}" == "cam_coarse_res_bin_diff_regression_gfortran_test" )
      	    cleanWs(cleanWhenSuccess: true, cleanWhenFailure: true)
         // This done to	make log and ouput availabel for later debugging
         sh 'chmod -R 755 /home/jenkins/cam_output'
      }
    }
    failure {
      script {
      if ( "${env.JOB_NAME}" ==	"cam_coarse_res_bin_diff_regression_gfortran_test" )
         // This done to	make log and ouput availabel for later debugging
      	 emailext(to: 'messnermet@uwm.edu', subject: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has Failed", attachLog: true, body: "${env.JOB_NAME} build ${env.BUILD_NUMBER} has failed. See the attached build log and the build results (${env.BUILD_URL}) for help troubleshooting.")
      }
    }
  }
}
